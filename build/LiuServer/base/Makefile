# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.8

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/local/bin/cmake

# The command to remove a file.
RM = /usr/local/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /root/linux/myLinux/myWebServer

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /root/linux/myLinux/myWebServer/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/local/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/usr/local/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	cd /root/linux/myLinux/myWebServer/build && $(CMAKE_COMMAND) -E cmake_progress_start /root/linux/myLinux/myWebServer/build/CMakeFiles /root/linux/myLinux/myWebServer/build/LiuServer/base/CMakeFiles/progress.marks
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f CMakeFiles/Makefile2 LiuServer/base/all
	$(CMAKE_COMMAND) -E cmake_progress_start /root/linux/myLinux/myWebServer/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f CMakeFiles/Makefile2 LiuServer/base/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f CMakeFiles/Makefile2 LiuServer/base/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f CMakeFiles/Makefile2 LiuServer/base/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /root/linux/myLinux/myWebServer/build && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
LiuServer/base/CMakeFiles/Baselib.dir/rule:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f CMakeFiles/Makefile2 LiuServer/base/CMakeFiles/Baselib.dir/rule
.PHONY : LiuServer/base/CMakeFiles/Baselib.dir/rule

# Convenience name for target.
Baselib: LiuServer/base/CMakeFiles/Baselib.dir/rule

.PHONY : Baselib

# fast build rule for target.
Baselib/fast:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/build
.PHONY : Baselib/fast

AsyncLogging.obj: AsyncLogging.cpp.obj

.PHONY : AsyncLogging.obj

# target to build an object file
AsyncLogging.cpp.obj:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/AsyncLogging.cpp.obj
.PHONY : AsyncLogging.cpp.obj

AsyncLogging.i: AsyncLogging.cpp.i

.PHONY : AsyncLogging.i

# target to preprocess a source file
AsyncLogging.cpp.i:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/AsyncLogging.cpp.i
.PHONY : AsyncLogging.cpp.i

AsyncLogging.s: AsyncLogging.cpp.s

.PHONY : AsyncLogging.s

# target to generate assembly for a file
AsyncLogging.cpp.s:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/AsyncLogging.cpp.s
.PHONY : AsyncLogging.cpp.s

CountDownLatch.obj: CountDownLatch.cpp.obj

.PHONY : CountDownLatch.obj

# target to build an object file
CountDownLatch.cpp.obj:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/CountDownLatch.cpp.obj
.PHONY : CountDownLatch.cpp.obj

CountDownLatch.i: CountDownLatch.cpp.i

.PHONY : CountDownLatch.i

# target to preprocess a source file
CountDownLatch.cpp.i:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/CountDownLatch.cpp.i
.PHONY : CountDownLatch.cpp.i

CountDownLatch.s: CountDownLatch.cpp.s

.PHONY : CountDownLatch.s

# target to generate assembly for a file
CountDownLatch.cpp.s:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/CountDownLatch.cpp.s
.PHONY : CountDownLatch.cpp.s

FileUtil.obj: FileUtil.cpp.obj

.PHONY : FileUtil.obj

# target to build an object file
FileUtil.cpp.obj:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/FileUtil.cpp.obj
.PHONY : FileUtil.cpp.obj

FileUtil.i: FileUtil.cpp.i

.PHONY : FileUtil.i

# target to preprocess a source file
FileUtil.cpp.i:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/FileUtil.cpp.i
.PHONY : FileUtil.cpp.i

FileUtil.s: FileUtil.cpp.s

.PHONY : FileUtil.s

# target to generate assembly for a file
FileUtil.cpp.s:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/FileUtil.cpp.s
.PHONY : FileUtil.cpp.s

LogFile.obj: LogFile.cpp.obj

.PHONY : LogFile.obj

# target to build an object file
LogFile.cpp.obj:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/LogFile.cpp.obj
.PHONY : LogFile.cpp.obj

LogFile.i: LogFile.cpp.i

.PHONY : LogFile.i

# target to preprocess a source file
LogFile.cpp.i:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/LogFile.cpp.i
.PHONY : LogFile.cpp.i

LogFile.s: LogFile.cpp.s

.PHONY : LogFile.s

# target to generate assembly for a file
LogFile.cpp.s:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/LogFile.cpp.s
.PHONY : LogFile.cpp.s

LogStream.obj: LogStream.cpp.obj

.PHONY : LogStream.obj

# target to build an object file
LogStream.cpp.obj:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/LogStream.cpp.obj
.PHONY : LogStream.cpp.obj

LogStream.i: LogStream.cpp.i

.PHONY : LogStream.i

# target to preprocess a source file
LogStream.cpp.i:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/LogStream.cpp.i
.PHONY : LogStream.cpp.i

LogStream.s: LogStream.cpp.s

.PHONY : LogStream.s

# target to generate assembly for a file
LogStream.cpp.s:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/LogStream.cpp.s
.PHONY : LogStream.cpp.s

Logging.obj: Logging.cpp.obj

.PHONY : Logging.obj

# target to build an object file
Logging.cpp.obj:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/Logging.cpp.obj
.PHONY : Logging.cpp.obj

Logging.i: Logging.cpp.i

.PHONY : Logging.i

# target to preprocess a source file
Logging.cpp.i:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/Logging.cpp.i
.PHONY : Logging.cpp.i

Logging.s: Logging.cpp.s

.PHONY : Logging.s

# target to generate assembly for a file
Logging.cpp.s:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/Logging.cpp.s
.PHONY : Logging.cpp.s

MyDB.obj: MyDB.cpp.obj

.PHONY : MyDB.obj

# target to build an object file
MyDB.cpp.obj:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/MyDB.cpp.obj
.PHONY : MyDB.cpp.obj

MyDB.i: MyDB.cpp.i

.PHONY : MyDB.i

# target to preprocess a source file
MyDB.cpp.i:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/MyDB.cpp.i
.PHONY : MyDB.cpp.i

MyDB.s: MyDB.cpp.s

.PHONY : MyDB.s

# target to generate assembly for a file
MyDB.cpp.s:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/MyDB.cpp.s
.PHONY : MyDB.cpp.s

Thread.obj: Thread.cpp.obj

.PHONY : Thread.obj

# target to build an object file
Thread.cpp.obj:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/Thread.cpp.obj
.PHONY : Thread.cpp.obj

Thread.i: Thread.cpp.i

.PHONY : Thread.i

# target to preprocess a source file
Thread.cpp.i:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/Thread.cpp.i
.PHONY : Thread.cpp.i

Thread.s: Thread.cpp.s

.PHONY : Thread.s

# target to generate assembly for a file
Thread.cpp.s:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/Thread.cpp.s
.PHONY : Thread.cpp.s

ThreadPool.obj: ThreadPool.cpp.obj

.PHONY : ThreadPool.obj

# target to build an object file
ThreadPool.cpp.obj:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/ThreadPool.cpp.obj
.PHONY : ThreadPool.cpp.obj

ThreadPool.i: ThreadPool.cpp.i

.PHONY : ThreadPool.i

# target to preprocess a source file
ThreadPool.cpp.i:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/ThreadPool.cpp.i
.PHONY : ThreadPool.cpp.i

ThreadPool.s: ThreadPool.cpp.s

.PHONY : ThreadPool.s

# target to generate assembly for a file
ThreadPool.cpp.s:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/ThreadPool.cpp.s
.PHONY : ThreadPool.cpp.s

Timestamp.obj: Timestamp.cpp.obj

.PHONY : Timestamp.obj

# target to build an object file
Timestamp.cpp.obj:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/Timestamp.cpp.obj
.PHONY : Timestamp.cpp.obj

Timestamp.i: Timestamp.cpp.i

.PHONY : Timestamp.i

# target to preprocess a source file
Timestamp.cpp.i:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/Timestamp.cpp.i
.PHONY : Timestamp.cpp.i

Timestamp.s: Timestamp.cpp.s

.PHONY : Timestamp.s

# target to generate assembly for a file
Timestamp.cpp.s:
	cd /root/linux/myLinux/myWebServer/build && $(MAKE) -f LiuServer/base/CMakeFiles/Baselib.dir/build.make LiuServer/base/CMakeFiles/Baselib.dir/Timestamp.cpp.s
.PHONY : Timestamp.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... rebuild_cache"
	@echo "... edit_cache"
	@echo "... Baselib"
	@echo "... AsyncLogging.obj"
	@echo "... AsyncLogging.i"
	@echo "... AsyncLogging.s"
	@echo "... CountDownLatch.obj"
	@echo "... CountDownLatch.i"
	@echo "... CountDownLatch.s"
	@echo "... FileUtil.obj"
	@echo "... FileUtil.i"
	@echo "... FileUtil.s"
	@echo "... LogFile.obj"
	@echo "... LogFile.i"
	@echo "... LogFile.s"
	@echo "... LogStream.obj"
	@echo "... LogStream.i"
	@echo "... LogStream.s"
	@echo "... Logging.obj"
	@echo "... Logging.i"
	@echo "... Logging.s"
	@echo "... MyDB.obj"
	@echo "... MyDB.i"
	@echo "... MyDB.s"
	@echo "... Thread.obj"
	@echo "... Thread.i"
	@echo "... Thread.s"
	@echo "... ThreadPool.obj"
	@echo "... ThreadPool.i"
	@echo "... ThreadPool.s"
	@echo "... Timestamp.obj"
	@echo "... Timestamp.i"
	@echo "... Timestamp.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /root/linux/myLinux/myWebServer/build && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

